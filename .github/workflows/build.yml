name: build

on:
  push:
    branches: [ 'master' ]
  pull_request:
    branches: [ 'master' ]

jobs:
  build:

    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [macos-13, ubuntu-latest, windows-latest] # macos-13, ubuntu-24.04, windows-2022
        python-version: ['3.9', '3.10', '3.11', '3.12', '3.13']
        exclude:
          - os: macos-13
            python-version: '3.9'
          - os: macos-13
            python-version: '3.10'
          - os: macos-13
            python-version: '3.12'
          - os: macos-13
            python-version: '3.13'
          - os: windows-latest
            python-version: '3.9'
          - os: windows-latest
            python-version: '3.10'
          - os: windows-latest
            python-version: '3.12'
          - os: windows-latest
            python-version: '3.13'

    steps:
    - uses: actions/checkout@v4.2.2
      with:
        lfs: true # 下载Git LFS缓存.
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5.6.0
      with:
        python-version: ${{ matrix.python-version }}
    - name: Set up FFmpeg
      uses: federicocarboni/setup-ffmpeg@v3.1
      id: setup-ffmpeg
    - name: Unix-like Before Install
      run: |
        python -m pip install --upgrade pip
        python -m pip install --upgrade build
        pip install coverage httpx pytest pytest-asyncio ruff
      if: runner.os != 'Windows'
    - name: Windows Before Install
      run: |
        py -m pip install --upgrade pip
        py -m pip install --upgrade build
        pip install coverage httpx pytest pytest-asyncio ruff
      if: runner.os == 'Windows'
    - name: Unix-like Install
      run: |
        python -m build
        pip install dist/*.whl
      if: runner.os != 'Windows'
    - name: Windows Install
      run: pip install .
      if: runner.os == 'Windows'
    - name: Lint with Ruff
      run: ruff check .
    - name: Test with pytest and generate coverage reports
      run: coverage run -m pytest
    - name: Upload coverage reports to Codecov
      uses: codecov/codecov-action@v5.4.3
      with:
          token: ${{ secrets.CODECOV_TOKEN }}
